clear
close all
rehash path

addpath ../sandbox
addpath ../bear

inputTbx = tablex.fromCsv("SV.csv");

estimStart = datex.q(1971,2);
estimEnd = datex.q(2020,1);
estimSpan = datex.span(estimStart, estimEnd);

meta = minnesota.Meta( ...
    endogenous=["YER", "HICSA", "STN"], ...
    units="", ...
    exogenous=[], ...
    order=4, ...
    intercept=true, ...
    estimationSpan=estimSpan, ...
    ...
    identificationHorizon=20, ...
    shockConcepts=["DEM", "SUP", "POL"] ...
);

dataH = minnesota.DataHolder(meta, inputTbx);


estimatorR1 = estimator.Minnesota(meta);
estimatorR1.Settings


sumCoeffD = dummies.SumCoefficients(Lambda=1e-4);


modelR1 = minnesota.ReducedForm( ...
    meta=meta ...
    , dataHolder=dataH ...
    , estimator=estimatorR1 ...
    , stabilityThreshold=Inf ...
    , dummies= {sumCoeffD} ...
);


rng(0)
modelR1.initialize();
info1 = modelR1.presample(1000);
betaMedian1 = calcMedian(modelR1,"beta");


%%%%%%%%%%%%%

meta = betaTV.Meta( ...
    endogenous=["YER", "HICSA", "STN"], ...
    units="", ...
    exogenous=[], ...
    order=4, ...
    intercept=true, ...
    estimationSpan=estimSpan, ...
    ...
    identificationHorizon=20, ...
    shockConcepts=["DEM", "SUP", "POL"] ...
);

dataH = betaTV.DataHolder(meta, inputTbx);


estimatorR2 = estimator.BetaTV(meta);
estimatorR2.Settings


modelR2 = betaTV.ReducedForm( ...
    meta=meta ...
    , dataHolder=dataH ...
    , estimator=estimatorR2...
    , stabilityThreshold=Inf ...
);


rng(0)
modelR2.initialize();
info2 = modelR2.presample(1000);


